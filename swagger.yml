swagger: '2.0'

info:
  title: People Graph HTTP Server API
  description: Endpoints for getting data by browser client
  version: 0.0.0

consumes:
  - application/json

produces:
  - application/json

paths:
  /healthcheck:
    get:
      tags:
        - system
      summary: Returns 200 OK response if server is working
      responses:
        200:
          description: data about health of the system
          schema:
            type: object
            properties:
              timestamp:
                type: dateTime
              data:
                type: object
                properties:
                  version:
                    type: string
                    example: '0.0.0'
                  message:
                    type: string
                    example: 'ok'

  /person:
    post:
      tags:
        - person
      summary: Create new person
      parameters:
        - in: body
          name: user
          schema:
            $ref: '#/definitions/PersonCreateOneRequest'
      responses:
        201:
          description: person was created successfully
          schema:
            $ref: '#/definitions/PersonCreateOneResponse'

    get:
      tags:
        - person
      summary: Get many persons
      parameters:
        - name: limit
          in: query
          description: How many persons to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: number
        - name: skip
          in: query
          description: How many persons should be skipped
          required: false
          schema:
            type: integer
            format: number
      responses:
        200:
          description: A paged array of persons
          content:
            application/json:    
              schema:
                $ref: '#/definitions/GetAllPersonsResponse'

  /person/{personId}:
    delete:
      tags:
        - person
      summary: Delete person
      parameters:
        - in: path
          name: personId
          required: true
          type: string
      responses:
        200:
          description: A paged array of persons
          content:
            application/json:    
              schema:
                $ref: '#/definitions/PersonDeleteOneResponse'

  /location/country:
    get:
      tags:
        - location
      summary: Get many countries
      parameters:
        - name: limit
          in: query
          description: How many countries to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: number
        - name: skip
          in: query
          description: How many countries should be skipped
          required: false
          schema:
            type: integer
            format: number
        - name: countryName
          in: query
          description: Search countries by name
          required: false
          schema:
            type: string
      responses:
        200:
          description: A paged array of countries
          content:
            application/json:    
              schema:
                $ref: '#/definitions/GetAllCountriesResponse'

  /location/country/{countryId}:
    get:
      tags:
        - location
      summary: Get certain country
      parameters:
        - name: countryId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Single country
          content:
            application/json:
              schema:
                $ref: '#/definitions/GetOneCountryResponse'

  /location/city/{cityId}:
    get:
      tags:
        - location
      summary: Get certain city
      parameters:
        - name: cityId
          in: path
          required: true
          type: string
      responses:
        200:
          description: Single city
          content:
            application/json:
              schema:
                $ref: '#/definitions/GetOneCityResponse'
              
definitions:
  DateTime:
    type: string
    format: date-time

  PersonCreateOneRequest:
    type: object
    required:
    - data
    properties:
      data:
        type: object
        required:
        - firstName
        - lastName
        - birthday
        properties:
          firstName:
            type: string
          lastName:
            type: string
          birthday:
            $ref: '#/definitions/DateTime'

  PersonCreateOneResponse:
    type: object
    required:
    - timestamp
    - data
    properties:
      timestamp:
        $ref: '#/definitions/DateTime'
      data:
        type: object
        required:
        - id
        - firstName
        - lastName
        - birthday
        properties:
          id:
            type: string
            format: uuid
          firstName:
            type: string
          lastName:
            type: string
          birthday:
            $ref: '#/definitions/DateTime'

  GetAllPersonsResponse:
    type: object
    required:
    - timestamp
    - data
    properties:
      timestamp:
        $ref: '#/definitions/DateTime'
      data:
        type: array
        items:
          type: object
          required:
          - id
          - firstName
          - lastName
          - birthday
          properties:
            id:
              type: string
              format: uuid
            firstName:
              type: string
            lastName:
              type: string
            birthday:
              $ref: '#/definitions/DateTime'

  PersonDeleteOneResponse:
    type: object
    required:
    - timestamp
    - data
    properties:
      timestamp:
        $ref: '#/definitions/DateTime'
      data:
        type: object
        required:
        - status
        properties:
          status:
            type: string

  Country:
    type: object
    required:
    - id
    - name
    - alpha2Code
    - alpha3Code
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      alpha2Code:
        type: string
      alpha3Code:
        type: string

  State:
    type: object
    required:
    - id
    - name
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string

  GetAllCountriesResponse:
    type: object
    required:
    - timestamp
    - data
    properties:
      timestamp:
        $ref: '#/definitions/DateTime'
      data:
        type: array
        items:
          $ref: '#/definitions/Country'

  GetOneCountryResponse:
    type: object
    required:
    - timestamp
    - data
    properties:
      timestamp:
        $ref: '#/definitions/DateTime'
      data:
        type: object
        required:
        - id
        - name
        - alpha2Code
        - alpha3Code
        - states
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          alpha2Code:
            type: string
          alpha3Code:
            type: string
          states:
            type: array
            items:
              $ref: '#/definitions/State'


  GetOneCityResponse:
    type: object
    required:
    - timestamp
    - data
    properties:
      timestamp:
        $ref: '#/definitions/DateTime'
      data:
        type: object
        required:
        - id
        - name
        - state
        - country
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          state:
            $ref: '#/definitions/State'
          country:
            $ref: '#/definitions/Country'
